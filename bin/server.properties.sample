# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

############################# Server Basics #############################

# The id of the broker. This must be set to a unique integer for each broker.
brokerid=1

# Hostname the broker will advertise to consumers. If not set, jafka will use the value returned
# from InetAddress.getLocalHost().  If there are multiple interfaces getLocalHost
# may not be what you want.
# Recomment you to set the real ip address who you want.
#hostname=


############################# Socket Server Settings #############################

# The port the socket server listens on
port=9092

# The number of processor threads the socket server uses for receiving and answering requests. 
# Defaults to the number of cores on the machine
#num.threads=1

############################# Log Basics #############################

# The directory under which to store log files.
# The directory must be empty or only contains jafka files.
log.dir=/tmp/jafka-data

# The number of logical partitions per topic per server. More partitions allow greater parallelism
# for consumption, but also mean more files.
num.partitions=1

# Overrides for for the default given by num.partitions on a per-topic basis
#topic.partition.count.map=topic1:3, topic2:4

############################# Log Flush Policy #############################

# The number of messages to accept before forcing a flush of data to disk
log.flush.interval=10000

# The maximum amount of time a message can sit in a log before we force a flush
log.default.flush.interval.ms=1000

# Per-topic overrides for log.default.flush.interval.ms
#topic.flush.intervals.ms=topic1:1000, topic2:3000

# The interval (in ms) at which logs are checked to see if they need to be flushed to disk.
log.default.flush.scheduler.interval.ms=1000

############################# Log Retention Policy #############################

# The following configurations control the disposal of log segments. The policy can
# be set to delete segments after a period of time, or after a given size has accumulated.
# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
# from the end of the log.

# The minimum age of a log file to be eligible for deletion
log.retention.hours=168

# A size-based retention policy for logs. Segments are pruned from the log as long as the remaining
# segments don't drop below log.retention.size.
#log.retention.size=1073741824

# The maximum size of a log segment file. When this size is reached a new log segment will be created.
#log.file.size=536870912
#1MB for test
log.file.size=536870912

# The interval at which log segments are checked to see if they can be deleted according 
# to the retention policies
log.cleanup.interval.mins=1

############################# Zookeeper #############################

# Enable connecting to zookeeper
enable.zookeeper=false

# Zk connection string (see zk docs for details).
# This is a comma separated host:port pairs, each corresponding to a zk
# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
# You can also append an optional chroot string to the urls to specify the
# root directory for all jafka znodes.
zk.connect=127.0.0.1:2181

# Timeout in ms for connecting to zookeeper
zk.connectiontimeout.ms=30000

# admin password (from v1.2)
# support type:
#    plain:jafka
#    md5:77be29f6d71ec4e310766ddf881ae6a0
#    crc32:1725717671
password=plain:jafka
